AWSTemplateFormatVersion: '2010-09-09'
Description: Instancia EC2 para cluster ECS / ECS cluster launchtype EC2.
Parameters:
  EnvType:
    Description: Tipo do Ambiente
    Default: dev
    Type: String
    AllowedValues:
      - prod
      - dev
    ConstraintDescription: especifique o ambiente dev ou prod

  EnvironmentName:
    Description: O nome do ambiente prefixado nos nomes dos recursos gerados
    Type: String
    Default: trilhalabs-myapi

  InstanceType:
    Description: EC2 instance type used to host containers. Choose t2 for testing, m5 for general purpose, c5 for CPU intensive services, and r5 for memory intensive services
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    ConstraintDescription: Escolha uma instancia valida / Choose a valid instance type.

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  DesiredCapacity:
    Type: Number
    Default: '1'
    Description: Numero de instancias EC2 iniciadas no ECS Cluster
  MaxSize:
    Type: Number
    Default: '6'
    Description: Numero maximo de instancias EC2 iniciadas no ECS Cluster
  
  #https://docs.aws.amazon.com/AmazonECS/latest/developerguide/retrieve-ecs-optimized_AMI.html
  ECSAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
    ConstraintDescription: The Amazon Machine Image ID used for the cluster, leave it as the default value to get the latest AMI

Resources:
  # ECS Resources
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${EnvironmentName}-${EnvType}-ec2
      Tags:
        - Key: owner
          Value: !Sub ${EnvironmentName}-${EnvType}

  # A security group for the EC2 hosts that will run the containers.
  # Rules are added based on what ingress you choose to add to the cluster.
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the ECS hosts that run containers
      VpcId: 
        Fn::ImportValue: !Sub ${EnvironmentName}-${EnvType}-VPC

  # Autoscaling group. This launches the actual EC2 instances that will register
  # themselves as members of the cluster, and run the docker containers.
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${EnvironmentName}-${EnvType}-PublicSubnet1
        - Fn::ImportValue: !Sub ${EnvironmentName}-${EnvType}-PublicSubnet2
      LaunchConfigurationName: !Ref 'ContainerInstances'
      MinSize: '1'
      MaxSize: !Ref 'MaxSize'
      DesiredCapacity: !Ref 'DesiredCapacity'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  ContainerInstances:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'ECSAMI'
      SecurityGroups:
        - !Ref 'ContainerSecurityGroup'
        - !ImportValue trilhalabs-myapi-sg-dev-InstanceSecurityGroupSSH
        - !ImportValue trilhalabs-myapi-sg-dev-InstanceSecurityGroupPING

      InstanceType: !Ref 'InstanceType'
      IamInstanceProfile: !Ref 'EC2InstanceProfile'
      LaunchConfigurationName: !Sub ${EnvironmentName}-${EnvType}-Node
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [ 'ecsInstanceRole' ]

Outputs:
  ClusterName:
    Description: Nome do ECS Cluster
    Value: !Ref 'ECSCluster'
    Export:
      Name: !Sub ${EnvironmentName}-${EnvType}-ClusterEC2
  